version: '3.8'

services:
  mongo:
    image: mongo
    container_name: "mongo"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - elevator_network
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
      ME_CONFIG_BASICAUTH: false
    networks:
      - elevator_network
    depends_on:
      - mongo
  cache:
    image: redis:7.2.4-alpine
    container_name: cache
    ports:
      - "6379:6379"
    networks:
      - elevator_network

  server:
    restart: always
    build:
      context: server
      dockerfile: Dockerfile
    command: |
      npm start
    container_name: server
    environment:
      - DB_URL=${DB_URL:?variable DB_URL is missing}
      - ISSUER_BASE_URL=${ISSUER_BASE_URL:?variable ISSUER_BASE_URL is missing}
      - TEST_USER_TOKEN=${TEST_USER_TOKEN:?variable TEST_USER_TOKEN is missing}
    ports:
      - "3000:3000"
    links:
      - cache
    networks:
      - elevator_network
    depends_on:
      - cache
      - mongo
  
  client:
    restart: always
    build:
      context: client
      dockerfile: Dockerfile
    container_name: client
    ports:
      - "4242:4242"
    depends_on:
      - server
    networks:
      - elevator_network

networks:
  elevator_network:

volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      device: ./mongo_data
      o: bind
  redis_data:
